// pokemon.json is generated by this script using PokéAPI(*) GraphQL (https://pokeapi.co/docs/graphql)
// * PokeAPI is created by Paul Hallett and other PokéAPI contributors around the world. Pokémon and Pokémon character names are trademarks of Nintendo.

interface PokemonResponse {
  pokemon_v2_pokemonspecy: {
    id: number;
    is_mythical: boolean;
    is_legendary: boolean;
    pokemon_v2_pokemonspeciesnames: [
      {
        name: string;
      }
    ];
  };
}

interface Pokemon {
  id: number;
  is_mythical: boolean;
  is_legendary: boolean;
  name_ja: string;
}

interface Output {
  pokemons_gen6: Pokemon[];
  pokemons_gen7: Pokemon[];
  pokemons_gen8: Pokemon[];
  pokemons_gen9: Pokemon[];
}

const query = `
query available_pokemons {
  pokemons_gen6: pokemon_v2_pokemondexnumber(where: {pokemon_species_id: {_lte: 721}}, order_by: {pokemon_species_id: asc}, distinct_on: pokemon_species_id) {
    ...pokemon_fragment
  }
  pokemons_gen7: pokemon_v2_pokemondexnumber(where: {pokemon_species_id: {_lte: 807}}, order_by: {pokemon_species_id: asc}, distinct_on: pokemon_species_id) {
    ...pokemon_fragment
  }
  pokemons_gen8: pokemon_v2_pokemondexnumber(where: {pokedex_id: {_in: [27, 28, 29]}}, order_by: {pokemon_species_id: asc}, distinct_on: pokemon_species_id) {
    ...pokemon_fragment
  }
  pokemons_gen9: pokemon_v2_pokemondexnumber(where: {pokedex_id: {_in: [31, 32, 33]}}, order_by: {pokemon_species_id: asc}, distinct_on: pokemon_species_id) {
    ...pokemon_fragment
  }
}

fragment pokemon_fragment on pokemon_v2_pokemondexnumber {
  pokemon_v2_pokemonspecy {
    id
    is_mythical
    is_legendary
    pokemon_v2_pokemonspeciesnames(where: {language_id: {_eq: 1}}) {
      name
    }
  }
}
`;

function transform(entry: PokemonResponse): Pokemon {
  const { id, is_mythical, is_legendary } = entry.pokemon_v2_pokemonspecy;
  const name_ja =
    entry.pokemon_v2_pokemonspecy.pokemon_v2_pokemonspeciesnames[0].name;
  return { id, is_mythical, is_legendary, name_ja };
}

async function main(): Promise<void> {
  const result = await fetch("https://beta.pokeapi.co/graphql/v1beta", {
    method: "POST",
    body: JSON.stringify({
      query: query,
      variables: {},
      operationName: "available_pokemons",
    }),
  });
  const { errors, data } = await result.json();
  if (errors) {
    console.error(errors);
  }
  const output: Output = {
    pokemons_gen6: data.pokemons_gen6.map(transform),
    pokemons_gen7: data.pokemons_gen7.map(transform),
    pokemons_gen8: data.pokemons_gen8.map(transform),
    pokemons_gen9: data.pokemons_gen9.map(transform),
  };

  console.log(JSON.stringify(output, null, 2));
}

main();
